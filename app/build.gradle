plugins {

    id 'com.android.application'
    id "androidx.navigation.safeargs"
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id("com.google.dagger.hilt.android")

    /*    id 'com.google.gms.google-services'
        id 'com.google.firebase.crashlytics'*/


}


android {

    compileSdk 33

    namespace 'com.example.a5asec'


    defaultConfig {
        resourceConfigurations += ['ar', 'en']

        applicationId "com.example.a5asec"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }


    if (project.hasProperty("debug")) {
        splits.abi.isEnable = false
        splits.density.isEnable = false
        aaptOptions.cruncherEnabled = false
    }
/*
    buildFeatures {
        viewBinding = false
        dataBinding = false
        aidl = false
        renderScript = false
        resValues = true
        shaders = false
    }*/

    buildFeatures {
        buildConfig = true

        dataBinding = true
        viewBinding = true
    }


    // TODO : add multiple productFlavors in my app (go learn)
    //flavorDimensions "client", "server"
    /*  productFlavors {

      }*/

    buildTypes {
        debug {
            pseudoLocalesEnabled true

            //IMPROVE:error with minifyEnabled is true
            minifyEnabled false
            debuggable true
        }
        qa {
            minifyEnabled true
            debuggable false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17

    }
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }
}

dependencies {

    /*    // Import the BoM for the Firebase platform
        implementation platform('com.google.firebase:firebase-bom:31.2.0')

        // Add the dependencies for the Crashlytics and Analytics libraries
        // When using the BoM, you don't specify versions in Firebase library dependencies
        implementation 'com.google.firebase:firebase-crashlytics'
        implementation 'com.google.firebase:firebase-analytics'*/

    implementation(libs.appcompat)
    implementation(libs.constraintlayout)


    implementation libs.annotation
    implementation libs.coreSplashScreen
    implementation libs.appcompat
    implementation libs.constraintLayout
    implementation libs.legacySupport
    implementation libs.recyclerView
    implementation libs.recyclerViewSelection
    implementation libs.navigationFragment
    implementation libs.navigationUI
    implementation libs.navigationDynamicFeatures
    implementation libs.lifecycleViewmodel
    implementation libs.lifecycleLivedata
    implementation libs.lifecycleRuntime
    implementation libs.lifecycleViewmodelSavedstate
    annotationProcessor libs.lifecycleCompiler
    implementation libs.lifecycleCommonJava8
    implementation libs.lifecycleService
    implementation libs.lifecycleProcess
    androidTestImplementation libs.lifecycleTesting
    implementation libs.multidex
    implementation libs.swiperefreshlayout

    annotationProcessor libs.annotation
    implementation libs.junit


    //lombok
    compileOnly libs.projectlombok.lombok
    annotationProcessor libs.projectlombok.lombok

    //Loading effect shimmer
    implementation(libs.shimmer)
    implementation libs.timber


    implementation(libs.commons.lang3)


    /*
        implementation 'com.github.smarteist:autoimageslider:1.4.0'
    */

    implementation libs.material

    implementation libs.play.services.maps
    implementation libs.maps.rx

    implementation libs.slidingpanelayout

    implementation libs.window

    implementation libs.window.java

    //Glide
    implementation libs.glide
    annotationProcessor libs.glideCompiler
    implementation(libs.okhttp3.integration) {
        exclude module: 'OkHttpLibraryGlideModule'
    }

    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))

    // Dependencies for local unit tests
    testImplementation libs.junit.junit
    testImplementation libs.hamcrest.all

    testImplementation libs.core.testing
    testImplementation libs.mockito.core

    // Dependencies for Dagger
    implementation libs.dagger
    implementation libs.dagger.android
    implementation libs.dagger.android.support
    annotationProcessor libs.dagger.compiler
    annotationProcessor libs.dagger.android.processor


    //retrofit
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.converter.scalars
    implementation libs.rxjava3.retrofit.adapter
    implementation libs.adapter.rxjava3
    implementation libs.logging.interceptor
    implementation libs.rxandroid
    implementation libs.rxjava
    implementation libs.okhttp


    //room
    implementation(libs.room.runtime)
    implementation(libs.androidx.room.rxjava3)
    implementation(libs.androidx.room.guava)
    annotationProcessor libs.androidx.room.compiler
    androidTestImplementation(libs.androidx.room.testing)
    implementation(libs.androidx.room.paging)
    implementation(libs.hilt.android)
    annotationProcessor(libs.hilt.android.compiler)

}